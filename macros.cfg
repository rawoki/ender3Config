#################################################################################
#########################  MAKRO POCZĄTKU I KOŃCA  ##############################
[gcode_macro PRINT_START]
gcode:
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
  {% set FL_SIZE = params.SIZE|default("0_0_0_0")|string %}
# Start bed heating
    M140 S{BED_TEMP}
    M104 S180  
# Use absolute coordinates
    G90
# Reset the G-Code Z offset (adjust Z offset if needed)
    SET_GCODE_OFFSET Z=0.0
# Home the printer
  G28
# Wait for bed temperature
  M190 S{BED_TEMP}
# Auto bed leveling, adaptacyjna metoda kalibracji
  ADAPTIVE_BED_MESH SIZE={FL_SIZE}
# Set nozzle temp
  M104 S{EXTRUDER_TEMP}
# Move the nozzle
  G1 Z50 F600
  G1 X10 Y10 F3000
# Wait for bed to reach temperature
  M190 S{BED_TEMP}
# Set and wait for nozzle to reach temperature
  M109 S{EXTRUDER_TEMP}

[gcode_macro PRINT_END]
variable_machine_depth: 235
gcode:
# Turn off bed, extruder, and fan
  M140 S0
  M104 S0
  SET_FAN_SPEED FAN=extruder_partfan SPEED=0
# Relative positionning
  G91
# Retract and raise Z
  G1 Z0.2 E-2 F2400
# Wipe out
  G1 X5 Y5 F3000
  G1 Z10
# Absolute positionning
  G90
# Present print
  G1 X100 Y225
# Disable steppers
  M84
#################################################################################
#################################################################################


[gcode_macro M106]   ## do ustawiania prędkości wiatraka
gcode:
      {% if params.S is defined %}
        {% if params.S|int == 255 %}
          {% set realspeed = 1 %}
       {% else %}
         {% if params.S|int == 0 %}
           {% set realspeed = 0 %}
          {% else %}
            {% set realspeed = 0.003921*params.S|int %}
          {% endif %}
        {% endif %}
        SET_FAN_SPEED FAN=extruder_partfan SPEED={realspeed}
      {% else %}
        SET_FAN_SPEED FAN=extruder_partfan SPEED=1
      {% endif %}

[gcode_macro M107]
gcode:
      SET_FAN_SPEED FAN=extruder_partfan SPEED=0

[gcode_macro M300]
gcode:
    SET_PIN PIN=beeper VALUE={1}
    G4 P{100}
    SET_PIN PIN=beeper VALUE={1}

[gcode_macro G29]
gcode:
    BED_MESH_CALIBRATE

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(200) %}      #edit to your park position
    {% set y = params.Y|default(200) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
      G1 Z{z_safe}
      G90
      G1 X{x} Y{y} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### set defaults #####
    {% set e = params.E|default(1) %} #edit to your retract length
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}


[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro FILAMENT_INSERT]
gcode:
	M109 S250
	M83
	G1 E100 F250
	M104 S0

[gcode_macro poziomowanie]
gcode:
    SCREWS_TILT_CALCULATE

[gcode_macro touchtest]
gcode:
    PROBE_ACCURACY REPEAT=10 SPEED=3

[gcode_macro poziomowanieZ]
gcode:
    Z_TILT_ADJUST

[gcode_macro LED_OFF]
gcode:
  SET_LED LED=my_neopixel RED=0.0 GREEN=0.0 BLUE=0.0 WHITE=0.0

[gcode_macro LED_ON]
gcode:
  SET_LED LED=my_neopixel RED=0.4 GREEN=0.4 BLUE=0.35 WHITE=0.4

###################  Makro do pokazania wszystkich zmiennych w terminalu  ################################
[gcode_macro DUMP_VARIABLES]
gcode:
    {% set filter_name = params.NAME|default('')|string|lower %}
    {% set filter_value = params.VALUE|default('')|string|lower %}
    {% set show_cfg = params.SHOW_CFG|default(0)|int %}
    
    {% set out = [] %}

    {% for key1 in printer %}
        {% for key2 in printer[key1] %}
            {% if (show_cfg or not (key1|lower == 'configfile' and key2|lower in ['config', 'settings'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}
                {% set dummy = out.append("printer['%s'].%s = %s" % (key1, key2, printer[key1][key2])) %}
            {% endif %}
        {% else %}
            {% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}
                {% set dummy = out.append("printer['%s'] = %s" % (key1, printer[key1])) %}
            {% endif %}
        {% endfor %}
    {% endfor %}
    
    {action_respond_info(out|join("\n"))}
####################################################################################################